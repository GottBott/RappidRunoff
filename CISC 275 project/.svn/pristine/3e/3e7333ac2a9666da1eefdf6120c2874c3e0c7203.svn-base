package group2.game;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.Random;

import javax.imageio.ImageIO;


public class City {
	RapidRunoffGame game;
	
//	public Image[] cities = new Image[5];
//	public Image no_city ;
//	public Image city;
	
	public Random rand = new Random();
	
	public Image[][] buildings = {null,null,null,null,null,null,null,null,null,null};
	public Image[] clouds = {null,null,null,null,null,null,null,null,null,null};
	public Image window;
	public Image roof;
	public Image cloudL;
	public Image cloudC;
	public Image cloudR;
	
	public City(RapidRunoffGame game) {
		this.game = game;
		
		try {
//			no_city = ImageIO.read(City.class.getResourceAsStream("no_city_background.png"));
//			city = ImageIO.read(City.class.getResourceAsStream("city_background.png"));
			
			window = ImageIO.read(City.class.getResourceAsStream("window.png"));
			roof = ImageIO.read(City.class.getResourceAsStream("roof.png"));
			cloudL = ImageIO.read(City.class.getResourceAsStream("cloudL.png"));
			cloudC = ImageIO.read(City.class.getResourceAsStream("cloudC.png"));
			cloudR = ImageIO.read(City.class.getResourceAsStream("cloudR.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
//		cities[0] = no_city;
//		cities[1] = no_city;
//		cities[2] = no_city;
//		cities[3] = no_city;
//		cities[4] = no_city;

		buildings[3] = genBuilding(null);
		buildings[4] = genBuilding(null);
		buildings[5] = genBuilding(null);
		buildings[6] = genBuilding(null);
		
		clouds[3] = cloudL;
		clouds[4] = cloudC;
		clouds[5] = cloudC;
		clouds[6] = cloudR;
	}
	
	public Image[] genBuilding(Image[] im){
		if(im != null){return im;}
		Image[] b = new Image[rand.nextInt(3)+2];
		for(int i = 0; i < b.length; i++){
			if(i == b.length-1){
				b[i] = roof;
			}else{
				b[i] = window;
			}
		}
		return b;
	}
	
	public void update() {
		if(game.game_time < 90000){
			buildings[2] = genBuilding(buildings[2]);
			buildings[7] = genBuilding(buildings[7]);
			clouds[2] = cloudL;
			clouds[3] = cloudC;
			clouds[6] = cloudC;
			clouds[7] = cloudR;
		}
		if(game.game_time < 60000){
			buildings[1] = genBuilding(buildings[1]);
			buildings[8] = genBuilding(buildings[8]);
			clouds[1] = cloudL;
			clouds[2] = cloudC;
			clouds[7] = cloudC;
			clouds[8] = cloudR;
		}
		if(game.game_time < 30000){
			buildings[0] = genBuilding(buildings[0]);
			buildings[9] = genBuilding(buildings[9]);
			clouds[0] = cloudL;
			clouds[1] = cloudC;
			clouds[8] = cloudC;
			clouds[9] = cloudR;
		}
		
//		if (game.game_time < 90000) {
//			cities[2] = city;
//		}
//		if (game.game_time < 60000) {
//			cities[1] = city;
//			cities[3] = city;
//		}
//		if (game.game_time < 30000) {
//			cities[0] = city;		
//			cities[4] = city;
//		}
	}
}
