package group2.game;
import java.awt.*; 
import java.awt.event.*;

import javax.swing.JFrame;
 
/**
 * Joe
 * 4/2/13
 */

public class InputHandler  implements KeyListener, MouseMotionListener, MouseListener{  
  
	
	RapidRunoffGame game;
	JFrame frame;
	WaterObjects currently_clicked = null;
	int powerupclicked = 0;
	Buffer buffer_clicked=null;


	
  
  public InputHandler(RapidRunoffGame g) { 
	  this.game = g;
  //
	  
	frame = game.frame;
	frame.getContentPane().add(game.draw_game);
	frame.setTitle("Rapid Runoff");
  	frame.setBackground(Color.WHITE);
  	frame.setExtendedState(Frame.MAXIMIZED_BOTH);  
  	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  	frame.getContentPane().addMouseListener(this);
  	frame.setVisible(true);
  	frame.setResizable(false);
  	
  	
  	Dimension size = frame.getBounds().getSize();
	game.screen_width = size.getWidth();
	game.screen_height = size.getHeight();
  }  
  
	  

 
  
  
  
  public void keyTyped ( KeyEvent e ){  
  
 }  
  
  public void keyPressed ( KeyEvent e){  
	  int keyCode = e.getKeyCode();
	  
	    switch( keyCode ) { 
	        
	        	
	        	
	        case KeyEvent.VK_ESCAPE:
	           frame.dispose();
	           System.exit(0);
	            break;
	  
	        		
	        	
	          
	     }
  }  
  public void keyReleased ( KeyEvent e ){ 
	  int keyCode = e.getKeyCode();
	  
	   
	}
	 


@Override
public void mouseDragged(MouseEvent arg0) {
	
}



@Override
public void mouseMoved(MouseEvent arg0) {
	
	
	
}



@Override
public void mouseClicked(MouseEvent e) {

}



@Override
public void mouseEntered(MouseEvent e) {
	
}



@Override
public void mouseExited(MouseEvent e) {
	
}



@Override
/**
 * Joe
 * Checks to see if we clicked on a WaterObject, and if we did, it will change the value
 * of its is_clicked attribute to true.  When a WaterObject is placed in the correct bin, it is removed from 
 * the screen, and the Player attribute player_score is updated accordingly.  If a WaterObject is clicked on 
 * and the next click is not in the correct bin, then its is_clicked will become false and 
 * currently_clicked will become null, allowing for the next WaterObject to be selected.
 * 
 * Mason
 * Took out code relating to an object already being clicked and added it to the mouseRelease event below.
 * 
 * Mary
 * added a portion to check if a powerUp was clicked/if riverBank was clicked
 * 
 * Steve
 * checks if powerup is pressed, if so initiate quizMode. if in quizMode accept input for the quiz only.
 * Mason
 * reorganize and bug cleanup
 */
public void mousePressed(MouseEvent e) {
	
	double x = e.getX()/game.screen_width;
	double y = e.getY()/game.screen_height;
	if(game.quizMode){
		//CHOICE A
				if(x > .05 && x < .1 && y > .19 && y < .29 ){
					if(game.map.power_ups.get(0).quiz.checkChoice(0)){
						System.out.println("RIGHT");								
						game.map.power_ups.get(0).activated = false;
						game.map.power_ups.get(0).deployed = true;
						game.quizMode = false;
						game.pause_or_unpause();
					}
					
					else{
						System.out.println("WRONG");
						//code to delete the quizbox
						game.quizMode = false;
						game.pause_or_unpause();
					}
					
				}
				
				//CHOICE B
				if(x > .05 && x < .1 && y > .29 && y < .39 ){
					if(game.map.power_ups.get(0).quiz.checkChoice(1)){
						System.out.println("RIGHT");
						game.quizMode = false;
						game.pause_or_unpause();
					}
					
					else{
						System.out.println("WRONG");
						//code to delete the quizbox
						game.quizMode = false;
						game.pause_or_unpause();
					}
					
				}
				
				//CHOICE C
				if(x > .05 && x < .1 && y > .39 && y < .49 ){
					if(game.map.power_ups.get(0).quiz.checkChoice(2)){
						System.out.println("RIGHT");
						game.quizMode = false;
						game.pause_or_unpause();
					}
					
					else{
						System.out.println("WRONG");
						//code to delete the quizbox
						game.quizMode = false;
						game.pause_or_unpause();
					}
					
				}
				
				//CHOICE D
				if(x > .05 && x < .1 && y > .49 && y < .59 ){
					if(game.map.power_ups.get(0).quiz.checkChoice(3)){
						System.out.println("RIGHT");
						game.quizMode = false;
						//code to delete the quizbox & deploy powerup
						game.pause_or_unpause();
					}
					
					else{
						System.out.println("WRONG");
						//code to delete the quizbox
						game.quizMode = false;
						game.pause_or_unpause();
					}
					
				}
	}
	else if(x >= 0.02 && x <= 0.04 && y >= 0.02 && y <= 0.053 && !game.quizMode){
		game.pause_or_unpause();
	}else{
		if(currently_clicked == null) {
			for (PowerUp p : game.map.power_ups){
				if(p.checkIfInPowerUp(x, y)){
					game.quizMode=true;
					if(!game.pause){game.pause_or_unpause();}
					game.draw_game.repaint();
					//p.deployPowerUp();
					break;
				}
			}
			for (WaterObjects o : game.map.water_objects) {
					if (o.checkClickRange(x, y)) {
						if (currently_clicked != null)
							currently_clicked.is_clicked = false;
						currently_clicked = o;
						o.is_clicked = true;
						new AePlayWave("src/group2/game/cookie_down.wav").start();
						break;
					}
			}
			for (Buffer b : game.map.buffers){
				if (b.checkIfInBuffer(x, y)){
					System.out.println("buffer");
					if (buffer_clicked !=null)
						buffer_clicked.is_clicked = false;
					buffer_clicked = b;
					b.is_clicked=true;
					break;
				}
			}
			}
		}
	}



@Override
/**
 * Mason
 * This method is to allow the user to drag the water object to it's respective bin. If the
 * mouse is released over the correct bin, the user gains points and the object disappears.
 * If the mouse is released any place other than the right bin, the object will return to it's
 * previous position. Uses above method as framework.
 */
public void mouseReleased(MouseEvent e) {
	double x = e.getX()/game.screen_width;
	double y = e.getY()/game.screen_height;
	if (currently_clicked != null) {
		if (currently_clicked.checkIfInBin(x, y) && currently_clicked.is_alive) {
			if (currently_clicked.lower_bin_x == .001) game.player.player_score.incrementOil(); // NOTE: if statement needs to be changed to reflect screen size, not my computers personal screen size
			else game.player.player_score.incrementFertilizer();
			game.map.items_removed++;
			currently_clicked.is_alive = false;
			currently_clicked.remove(true);
			currently_clicked = null;
			new AePlayWave("src/group2/game/drop_sound.wav").start();
		}
		else {
			currently_clicked.is_clicked = false;
			currently_clicked = null;
		}
		return;
	}
	else if (buffer_clicked != null){
		for (RiverBank r : game.map.river_banks){
			if (r.checkIfInBank(x, y)){
				System.out.println("in bank");
				Position coordinates = r.checkCoordinates(x, y);
				r.addBuffer(buffer_clicked, coordinates);
				buffer_clicked.is_clicked=false;
				buffer_clicked = null;
				return;
			}
			
			
		}
		buffer_clicked.is_clicked=false;
		buffer_clicked = null;
		return;
	}
	
} 
}

