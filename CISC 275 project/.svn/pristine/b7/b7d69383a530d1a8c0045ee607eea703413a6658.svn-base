package group2.game;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.ArrayList;



public class HighScoreList {
	
	// where the game can find the score data
	 static ArrayList<ScoreData> scores; 
	
	//puts core into score list in order and then calls the write function to save the scores.
	public static void addScore(ScoreData new_data){
		int rank = 0;
		getScores();
		
		// no scores in list add to front
		if(scores.size() ==0){
			new_data.rank =0;
			scores.add(new_data);
			writeScore();
			return;
			
		}
		// else add to correct spot;
		else{
			for(ScoreData score:scores){
				if(new_data.score >= score.score){
					score.rank=rank;
					scores.add(rank, new_data);
					writeScore();
					return;
				}
				else{
					rank++;
				}
			}
			
			// add to end if lowest score;
			new_data.rank=rank;
			scores.add(new_data);
			writeScore();
		}
	}
	

	private static void writeScore() {
		
		Writer writer = null;

        try {
        	// clears list for rewrite
            File file_old = new File("src/group2/game/ScoreList.txt");
            file_old.delete();
            
            File file = new File("src/group2/game/ScoreList.txt");
            writer = new BufferedWriter(new FileWriter(file));
            
            // for all the scores in the high score list
            int rank = 0;
            for(ScoreData score:scores){
        		String text = score.toString() +  "," + rank;; //append the rank
        		writer.write(text); 	// write the scoredata separated by commas
        		writer.write("\r\n");	//new line
        		rank++;
        	}
            
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (writer != null) {
                    writer.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
	}


	public static ArrayList<ScoreData> getScores(){
		scores = new ArrayList<ScoreData>();
		File file = new File("src/group2/game/ScoreList.txt");			//file name
        StringBuilder contents = new StringBuilder();
        BufferedReader reader = null;

        try {
            reader = new BufferedReader(new FileReader(file));
            String text = null;

            // make a new score data from each line and insert it into 
            // the arrylist, repeat until all lines all lines are read
            while ((text = reader.readLine()) != null) {
            	String str[] = text.split(",");
            	ScoreData d = new ScoreData(str[0],Double.parseDouble(str[1]),Double.parseDouble(str[2]));
            	d.rank = Integer.parseInt(str[3]);
            	scores.add(d);
                contents.append(text).append(System.getProperty("line.separator"));
  
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (reader != null) {
                    reader.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

		return scores;
    }
	
	
}
