package group2.game;
import java.awt.Color;
import java.awt.Image;
import java.util.Random;

/**
 * Stefan
 * 4/3/13
 */
public abstract class WaterObjects {

	Position position;
	RapidRunoffGame game;
	int point_value = 10;
	Boolean is_alive = true;
	public int updates = 0;
	public boolean is_clicked = false;
	public Color color = null;

	double lower_bin_x;
	double upper_bin_x;
	double lower_bin_y;
	double upper_bin_y;
	int time_num =0;
	double shift;
	Random rand = new Random();
	int sin_num = (int)rand.nextDouble()*300;
	
	double x_velocity = 0;
	double y_velocity = 0.005;
	
	public Image[] image;
	public int cur_image;
	int streamnumber;
	
	public WaterObjects(Position p, RapidRunoffGame g, int stream) {
		this.position = p;
		this.game = g;
		this.shift = rand.nextDouble()/(g.screen_height*.0114);
		this.streamnumber = stream;
	}
	
	/**
	 * Joe
	 * checks to see if the mouse click is within the range of the image representing
	 * the water object
	 */
	public boolean checkClickRange(double x, double y) {
		double x_range = 0.02;
		double y_range = 0.02;
		
		return ((x >= position.x - x_range && x <= position.x + 2*x_range) && (y <= position.y + 2* y_range && y >= position.y - y_range));
	}

	/**
	* Joe
	* Checks to see if the mouse click is within the range of the image representing
	* the bin for the water object.
	*/
	public boolean checkIfInBin(double x, double y) {
		return x >= lower_bin_x && x <= upper_bin_x && y >= lower_bin_y && y <= upper_bin_y;
	}
	
	/**
	 * Stefan
	 * moves the object according to its current velocity
	 */
	public void moveWaterObject(){
		double x_new = position.getXPos() + x_velocity;
		double y_new = position.getYPos() + y_velocity;
		position.setPosition(x_new, y_new);
	}
	
	/**
	 * Stefan
	 * Removes the object and adds or subtracts score
	 * The input controlse add(true) and subtract(false)
	 */
	public void remove(boolean score){
		int points = score ? point_value : (-1*point_value);
		game.player.player_score.addScore(points);
		game.map.water_objects.remove(this);
		
	}
	
	/**
	 * Ben
	 * gave objects a more curved path down streams and through river
	 * 
	 * Mary 4/21
	 * checks if passing permanent erosion, which increases speed
	 */
	public void update() {
		if(time_num <300)
			time_num++;
		else{
			time_num=0;
		}
		updates++;
		
		//checks if object is in river
		if(position.getYPos() > game.map.river.position.y + 1.0/100 + shift) {
			x_velocity = 0.0033;
			y_velocity = 0;
			RiverBank leftBank = game.map.river_banks.get(0);
			RiverBank rightBank = game.map.river_banks.get(1);

			//if object is under lower left bank, left column
			if ((leftBank.position.getXPos() <= position.getXPos()) && (position.getXPos() < (leftBank.position.getXPos() + leftBank.width/2))){
				if (leftBank.permanent_erosion[0][1]){
					x_velocity = 0.005;
					//System.out.println("passing erosion");

				}
			}
			
			//if object is under lower left bank, right column
			else if (((leftBank.position.getXPos() + leftBank.width/2) <= position.getXPos()) && (position.getXPos() <= (leftBank.position.getXPos()+leftBank.width))){
				if (leftBank.permanent_erosion[1][1]){
					x_velocity = 0.005;
					//System.out.println("passing erosion");


				}
			}
			
			//if object is under lower right bank, left column
			else if ((rightBank.position.getXPos() <= position.getXPos()) && (position.getXPos() < (rightBank.position.getXPos() + rightBank.width/2))){
				if (rightBank.permanent_erosion[0][1]){
					x_velocity = 0.005;
					//System.out.println("passing erosion");


				}
			}
			
			//if object is under lower right bank, right column
			else if (((rightBank.position.getXPos() + rightBank.width/2) <= position.getXPos()) && (position.getXPos() <= (rightBank.position.getXPos()+rightBank.width))){
				if (rightBank.permanent_erosion[1][1]){
					x_velocity = 0.005;
					//System.out.println("passing erosion");

				}
			}
			
			
			if(time_num%20 == 0)
				if(sin_num <300)
					sin_num++;
				else{
					sin_num=0;
				}
				position.setPosition(position.getXPos() , position.getYPos() + 0.0005*Math.sin(sin_num+(300*shift)));
			
		}
		
		//else object is in a stream
		else{
			
			x_velocity = 0;
			y_velocity = 0.005;
			
			// go along with curvature of graphics 
			if(streamnumber ==2)
				x_velocity = -.0008;
			if(streamnumber ==0)
				x_velocity = .0008;
			

			RiverBank leftBank = game.map.river_banks.get(0);
			RiverBank rightBank = game.map.river_banks.get(1);


			//object is in stream 1
			if (streamnumber ==0){
				
				//object is passing top row
				if ((leftBank.position.getYPos() <= position.getYPos()) && (position.getYPos() < (leftBank.position.getYPos() + leftBank.height/2))){
					if (leftBank.permanent_erosion[0][0]){
					y_velocity = 0.007;
					//System.out.println("passing erosion");
					}
				}
				
				//object is passing bottom row
				else if (((leftBank.position.getYPos() + leftBank.height/2) <= position.getYPos()) && (position.getYPos() <= (leftBank.position.getYPos()+ leftBank.height))){
					if (leftBank.permanent_erosion[0][1]){
						y_velocity = 0.007;
						//System.out.println("passing erosion");
						}
					}
				}
				
				//object is in stream 2
				else if (streamnumber ==1){
					
					//object passing top row
					if ((leftBank.position.getYPos() <= position.getYPos()) && (position.getYPos() < (leftBank.position.getYPos() + leftBank.height/2))){
						if (leftBank.permanent_erosion[1][0] || rightBank.permanent_erosion[0][0]){
							y_velocity = 0.007;
							//System.out.println("passing erosion");
						}
					}
					
					//object passing bottom row
					else if (((leftBank.position.getYPos() + leftBank.height/2) <= position.getYPos()) && (position.getYPos() <= (leftBank.position.getYPos()+ leftBank.height))){
						if (leftBank.permanent_erosion[1][1] || rightBank.permanent_erosion[0][1]){
							y_velocity = 0.007;
							//System.out.println("passing erosion");

							}
					}
				}
				
				//object is in stream 3
				else if (streamnumber ==2){
					
					//object passing top row
					if ((rightBank.position.getYPos() <= position.getYPos()) && (position.getYPos() < (rightBank.position.getYPos() + rightBank.height/2))){
						if (rightBank.permanent_erosion[1][0]){
							y_velocity = 0.007;
							//System.out.println("passing erosion");
						}
					}
					
					//object passing bottom row
					else if (((rightBank.position.getYPos() + rightBank.height/2) <= position.getYPos()) && (position.getYPos() <= (rightBank.position.getYPos()+rightBank.height))){
						if (rightBank.permanent_erosion[1][1]){
							y_velocity = 0.007;
							//System.out.println("passing erosion");
						}
					}
				}
					

			if(time_num%20 == 0)
				if(sin_num <300)
					sin_num++;
				else{
					sin_num=0;
				}
				position.setPosition(position.getXPos() + 0.0005*Math.sin(sin_num+(300*shift)), position.getYPos());
		}
//		if(position.getXPos() > 1.07){
//			is_alive = false;
//			remove(false);
//			
//		}
		//x_velocity = ((position.getYPos() > game.map.river.position.y + 1.0/100)&&
			//	(position.getYPos() < game.map.river.position.y + 1.0/100 + shift))?.0033:0;
		//if(position.getYPos() >= game.map.river.position.y + 1.0/100 + shift) x_velocity = .0033; //SHOULD GET CLEANED UP AT SOME POINT (mason)
		if(updates % 5 == 0) moveWaterObject();
		if(updates % 10 == 0) cur_image = (cur_image + 1) % 3;
	}
	
}
